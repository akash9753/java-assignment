[ To understand any java concept you can refer this video link : Learn Core Java ]
01.	Write a program to print Hello World. Compile and run it using command prompt.
          class Program{
	
	public static void main(String [] args) {
		System.out.println("hello world");
		}
}


02.	Write a program to declare a variable named rollNo of integer type. Assign it a value (let say 100) to it and print the following statement roll no = 100 .
   class Program{
	
	public static void main(String [] args) {
		int rollno =10;
		System.out.println("x : "+rollno);
	}
}
03.	Find the result of following expressions. You need to determine the primitive data type of the variable by looking carefully the given expression and initialize variables by any random value.
A. y = x2 + 3x - 7 (print value of y) 
class Program{
	
	public static void main(String [] args) {
		int x=4;
		int result = x*x+3*x-7;
		System.out.println("result : "+result);
		}
}


B. y = x++ + ++x (print value of x and y) 
class Program{
	
	public static void main(String [] args) {
		int x=4;
		int y = x++ + ++x;
		System.out.println("value of x ="+x );
		System.out.println("value of x ="+y );
		
		}
}

C. z = x++ - --y - --x  +  x++ (print value of x ,y and z)
class Program{
	
	public static void main(String [] args) {
		int x=4;
		int y = 6;
		int z = x++ - --y - --x  +  x++;
		System.out.println("value of x ="+x );//5
		System.out.println("value of x ="+y );//5
		System.out.println("value of x ="+z );//-1
		}
}
D. z = x && y || !(x || y)  (print value of z) [ x, y, z are boolean variables ]


04.	Write a program that initializes 2 byte type of variables. Add the values of these variables and store in a byte type of variable. [Note: primitive down casting is required in this program ] .

       class Program{
	
	public static void main(String [] args) {
		short b=10;
		short d=20;
		byte c = (byte) b;
		byte t = (byte) d;
		int res = c+t;
		System.out.println(res);
	}
}

05.	Write a program that takes user’s name as command line argument and prints Welcome <entered user name>.

         class Program{
	
	public static void main(String [] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("Name : ");
		String name = sc.nextLine();
		System.out.println("welcome : "+name);
	}
}

06.	Write a program that takes radius of a circle as input. Read the entered radius using Scanner class. Then calculate and print the area and circumference of the circle.
         class Program{
	
	public static void main(String [] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter radius : ");
		double radius = sc.nextInt();
		double area = 3.14*radius*radius;
		double cir = 2*3.14*radius;
		System.out.println("area of circle : "+area);
		System.out.println("cirf of circle : "+cir);
	}
}
       
07.	Write a program to calculate sum of 5 subject’s marks & find percentage. Take the obtained marks from user using Scanner class. Output should be in this format [ percentage marks = 99 % ]. Use concatenation operator here.
        class Program{
	
	public static void main(String [] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter marks : ");
		int m1 = sc.nextInt();
		System.out.println("Enter marks : ");
		int m2 = sc.nextInt();
		System.out.println("Enter marks : ");
		int m3 = sc.nextInt();
		System.out.println("Enter marks : ");
		int m4 = sc.nextInt();
		System.out.println("Enter marks : ");
		int m5 = sc.nextInt();
		
		int total = m1+m2+m3+m4+m5;
		int percent = (total*100)/500;
		
		System.out.println("percentage marks : "+percent+"%");
	}
}
08.	Write a program to find the simple interest. Take the principle amount, rate of interest and time from user using Scanner class.
           class Program{
	
	public static void main(String [] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter Principal : ");
		int p = sc.nextInt();
		System.out.println("Enter Rate  : ");
		int r = sc.nextInt();
		System.out.println("Enter time : ");
		int t = sc.nextInt();
		
		int si= (p*r*t)/100;
	    int amount = p+si;
		
		System.out.println("simple intrest : "+si);
		System.out.println("total amount : "+amount);
	}
}

09.	Write a program to read the days (eg. 670 days) as integer value using Scanner class. Now convert the entered days into complete years, months and days and print them.
        class Program{
	
	public static void main(String [] args) {
		int d , m , y;
		Scanner sc = new Scanner(System.in);
		System.out.println("enter days : " );
		int days = sc.nextInt();
		y = days/365;
		days = days%365;
		m=days/30;
		m=m%30;
		d=m/7;
		System.out.println("year ="+y );
		System.out.println("month ="+m );
		System.out.println("day ="+d );
		
		}
}
10.	Write a program to convert temperature from Fahrenheit to Celsius. Take Fahrenheit as input using Scanner class. [ formula : C= 5*(f-32)/9 ]
          class Program{
	
	public static void main(String [] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("enter tempreture in ferignhiegt");
		double f = sc.nextDouble();
		double C= 5*(f-32)/9 ;
		System.out.println("value in celcius :" +C);
		}
}
11.	Write a program to swap two numbers without using third variable.
           class Program{
	
	public static void main(String [] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("enter value of x : ");
		int x= sc.nextInt();
		System.out.println("enter value of y : ");
		int y = sc.nextInt();
		x=x+y;
		y=x-y;
		x=x-y;
		System.out.println("after swapping");
		System.out.println(" value of x : "+x);
		System.out.println(" value of y : "+y);
		}
}  
12.	In a company an employee is paid as under: If his basic salary is less than Rs. 10000, then HRA = 10% of basic salary and DA = 90% of basic salary. If his salary is either equal to or above Rs. 10000, then HRA = Rs. 2000 and DA = 98% of basic salary. If the employee's salary is input by the user write a program to find his gross salary. [ formula : GS= Basic + DA + HRA ]
13.	Program to find greatest in 3 numbers. [ once using if else statement and then using ternary operator ( logical operator) ]  
        class Program{
	
	public static void main(String [] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("enter value of x : ");
		int x= sc.nextInt();
		System.out.println("enter value of y : ");
		int y = sc.nextInt();
		System.out.println("enter value of z : ");
		int z = sc.nextInt();
		int big = x > y ? (x > z ? x : z) : (y > z ? y : z) ;
		System.out.println("greatest number : "+big);
		}
}
14.	Program to check that entered year is a leap year or not.
        import java.util.Scanner;

class Program{
	
	public static void main(String [] args) {
		Scanner sc = new Scanner(System.in);
		 System.out.println("Enter year: ");
		    int y = sc.nextInt();

		    if(y % 4 == 0)
		    {
		    	//Nested if else
		        if( y % 100 == 0)
		        {
		            if ( y % 400 == 0)
		            	System.out.println("yes this is leap year: "+y);
		            else
		            	System.out.println("no this is not a leap year: "+y);
		        }
		        else
		        	System.out.println("yes this is leap year: "+y);
		    }
		    else
		    	System.out.println("no this is not a leap year: "+y);

		  }
		}
15.	Accept person’s gender (character m for male and f for female), age (integer), as input and then check whether person is eligible for marriage or not.
        class Program{
	
	public static void main(String [] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("enter sex f/m : ");
		    int  sex = sc.next().charAt(0);
		    
		    if(sex == 'm') {
		    	
		    	System.out.println("Enter age: ");
			    int age = sc.nextInt();
		    	if(age > 21) {
		    		System.out.println("u r eligible for merrige ");	
		    		}else 
		    			System.out.println("u r not eligible for marrige ");	
		    }
		    if(sex == 'f') {
		    	System.out.println("Enter your age: ");
		    	
			    int age = sc.nextInt();
		    	if(age > 18) {
		    		System.out.println("u r eligible for merrige ");	
		    		}else
		    			System.out.println("u r not eligible for marrige ");	
		  }
	}
}
16.	Write a program to print table of any entered number using loop.
        class Program{
	
	public static void main(String [] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("enter a number");
		int x = sc.nextInt();
		for (int i=1;i<=10;++i) {
			System.out.println(x*i);
			}
		  }
	}
17.	Write a program to reverse a given number.
        public class ReverseNumberWhile
{
   public static void main(String args[])
   {
      int num=1234;
      int reversenum =0;
    while( num != 0 )
      {
          reversenum = reversenum * 10;
          reversenum = reversenum + num%10;
          num = num/10;
      }

      System.out.println(reversenum);
   }
}
18.	Program to check whether number is prime or not.
        public class Main {

    public static void main(String[] args) {

        int num = 29;
        boolean flag = false;
        for(int i = 2; i <= num/2; ++i)
        {
            // condition for nonprime number
            if(num % i == 0)
            {
                flag = true;
                break;
            }
        }

        if (!flag)
            System.out.println(num + " is a prime number.");
        else
            System.out.println(num + " is not a prime number.");
    }
}
19.	Calculate  series : 12+22+32+42+.........+n2
        

20.	Print all prime numbers between two given numbers. [ break continue ]

21.	Program to show sum and average of 10 element array. Accept array elements from user. 
        class Program{
	
	public static void main(String [] args) {
		Scanner sc = new Scanner(System.in);
		 {
		        int n, sum = 0;
		     
		        Scanner s = new Scanner(System.in);
		        System.out.print("Enter no. of elements you want in array:");
		        n = s.nextInt();
		        int arr[] = new int[n];
		        System.out.println("Enter all the elements:");
		      for ( int i = 0; i < n; i++)
		      {
		    	  arr[i] = sc.nextInt();
		    	  sum = sum + arr [i];
		      }
		      System.out.println("Sum:"+sum);
		      float average = (float)sum/n;
		      System.out.println("average:"+average);
		    }
	}
}
22.	Sort a ten element array in descending order.
         public class Descending_Order
{
    public static void main(String[] args) 
    {
        int n, temp;
        Scanner s = new Scanner(System.in);
        System.out.print("Enter no. of elements you want in array:");
        n = s.nextInt();
        int a[] = new int[n];
        System.out.println("Enter all the elements:");
        for (int i = 0; i < n; i++) 
        {
            a[i] = s.nextInt();
        }
        for (int i = 0; i < n; i++) 
        {
            for (int j = i + 1; j < n; j++) 
            {
                if (a[i] < a[j]) 
                {
                    temp = a[i];
                    a[i] = a[j];
                    a[j] = temp;
                }
            }
        }
        System.out.print("Descending Order:");
        for (int i = 0; i < n - 1; i++) 
        {
            System.out.print(a[i] + ",");
        }
        System.out.print(a[n - 1]);
    }
}
23.	Write a program to reverse the array elements.



24.	Write a program to search an element in the array.
        import java.util.Scanner;
public class Search_Element
{
    public static void main(String[] args) 
    {
        int n, x, flag = 0, i = 0;
        Scanner s = new Scanner(System.in);
        System.out.print("Enter no. of elements you want in array:");
        n = s.nextInt();
        int a[] = new int[n];
        System.out.println("Enter all the elements:");
        for(i = 0; i < n; i++)
        {
            a[i] = s.nextInt();
        }
        System.out.print("Enter the element you want to find:");
        x = s.nextInt();
        for(i = 0; i < n; i++)
        {
            if(a[i] == x)
            {
                flag = 1;
                break;
            }
            else
            {
                flag = 0;
            }
        }
        if(flag == 1)
        {
            System.out.println("Element found at position:"+(i + 1));
        }
        else
        {
            System.out.println("Element not found");
        }
    }
}
25.	Write the program to find the sum of even elements and sum of odd elements present in the array of integer type.
         class Program{
	
	public static void main(String [] args) {
		Scanner sc = new Scanner(System.in);
		int even=0,odd=0;
		 int arr[] = {1,2,3,4,5,6};
		 for ( int i=0;i<arr.length;i++)
		 {
			 if(arr[i]%2==0)
			 {
				 even = even + arr[i];
			 }else
			 {
				 odd = odd + arr[i];
			 }
		 }
		 System.out.println(even);
		 System.out.println(odd); 
}
}
26.	Create an array of 17 elements in 5 rows.  And calculate sum of all elements.
27.	Write a program to fine the smallest and greatest number present in the array of integer type.
28.	Initialize one String type of array and print the elements using for each loop.
29.	Write a program to print the total number of one-D arrays in a two-D array and the number of elements in every one-D array present in the two-D arrays.
30.	Create an integer type 2-D array of size [3X3]. Take the elements from the user and then calculate the sum of the elements present in the diagonal.


31.	Create a class Student with 2 data members rno and name. Create one method setData() that takes roll number and student name as parameter and stores them in data members rno and name. Create one more method showData() to print the data member values. Create another class ( main class) StudentDemo that creates Student class object and calls setData() and showData() methods.
        class Student{
	int rollno;
	String name;
	public void setData(int rollno,String name) {
		this.rollno = rollno;
		this.name=name;
	}
	 public void showData(){
		System.out.println("Rollno : "+this.rollno);
		System.out.println("Name : "+this.name);
	}
}
public class Studentdemo {
	public static void main (String[] args) {
	 Student s = new Student();
	 s.setData(11,"akash patel");
	 s.showData();
}
}
32.	Modify the above program (no. 31) to count the no of Student objects created. [ In this program static variable is required ]
        class Student{
	int rollno;
	String name;
	  static int noOfObjects = 0; 
	   { 
	        noOfObjects ++; 
	    } 
	public void setData(int rollno,String name) {
		this.rollno = rollno;
		this.name=name;
	}
	 public void showData(){
		System.out.println("Rollno : "+this.rollno);
		System.out.println("Name : "+this.name);
	}
}
public class Studentdemo {
	public static void main (String[] args) {
	Student s = new Student();
	//Student p = new Student();
	s.setData(11,"akash patel");
	 s.showData();
	 System.out.println(Student.noOfObjects); 
}

33.	Write a program to demonstrate functionalities of this keyword in java. 
         class Student{
	int rollno;
	String name;
	  static int noOfObjects = 0; 
	   { 
	        noOfObjects ++; 
	    } 
	public void setData(int r,String n) {
		this.rollno = r;
		this.name=n;
	}
	 public void showData(){
		System.out.println("Rollno : "+this.rollno);
		System.out.println("Name : "+this.name);
	}
}
public class Studentdemo {
	public static void main (String[] args) {
	Student s = new Student();
	//Student p = new Student();
	s.setData(11,"akash patel");
	 s.showData();
	 System.out.println(Student.noOfObjects); 
}
34.	Create a class Circle that has two data members, one to store the radius and another to store area and 
three methods first init() method to input radius from user, second calculateArea() method to calculate area of circle and third display() method 
to display values of radius and area. Create class CircleDemo ( main class) that creates the Circle object and calls 
init(), calculateArea() and display() methods.
import java.util.Scanner; 
class Circle{
	int radius;
	double area;
	  
	 public void display(){
		System.out.println("Area of circle : "+this.area);
	}
	 public void init(){
		 Scanner sc = new Scanner(System.in); 
			System.out.println("Enter value of radius : ");
			radius = sc.nextInt();
	}
	 public void calculateArea(){
		 area = 3.14*radius*radius;
	}
}
public class Studentdemo {
	 public static void main (String[] args) {
	 Circle c = new Circle();
	 c.init();
	 c.calculateArea();
	 c.display();
}
}
35.	Create a class MathOperation that has four static methods. add() method that takes two integer numbers 
as parameter and returns the sum of the numbers. subtract() method that takes two integer numbers as parameter 
and returns the difference of the numbers. multiply() method that takes two integer numbers as parameter and 
returns the product. power() method that takes two integer numbers as parameter and returns the power of first 
number to second number. Create another class Demo (main class) that takes the two numbers from the user and 
calls all four methods of MathOperation class by providing entered numbers and prints the return values of every method.

import java.util.Scanner; 
class MathOperation{
	public int add(int x,int y){
		 return x+y;
		 
	}
	 public int sub(int x,int y){
			return x-y;
		}
	 public int multiply(int x,int y){
			return x*y;
		}
	 public int devide(int x,int y){
			return x/y;
		}
	
}
public class Studentdemo {
	 public static void main (String[] args) {
	
		 MathOperation c = new MathOperation();
	 Scanner sc = new Scanner(System.in);
	 System.out.println("enter two numbers :");
	 int a = sc.nextInt();
	 int b = sc.nextInt();
	 int sum = c.add(a,b);
	 System.out.println("addition of two numbers :"+sum);
	 int sub = c.sub(a,b);
	 System.out.println("subtraction of two numbers :"+sub);
	 int m = c.multiply(a,b);
	 System.out.println("multiplaucation of two numbers :"+m);
	 int div = c.devide(a,b);
	 System.out.println("division of given numbers :"+div);
}
}


36.	Create a class MathOperation containing overloaded methods ‘multiply’ to calculate multiplication of following arguments. 
a.	 two integers 
b.	 three floats 
c.	 all elements of array 
d.	one double and one integer 

37.	Create a class Person with properties (name and age) with following features. 
a.	Default age of person should be 18.
b.	A person object can be initialized with name and age.
c.	Method to display name and age of person
Create another class PersonDemo ( main class ) that demonstrates the functionalities of Person class by creating Person object and calling methods.
class Person	{
	private String name;
	private int age;
	Person(){
		this.name="";
		this.age=18;
	}
	public void setName(String name) {
		this.name = name;
	}
	public void setAge(int age) {
		this.age = age;
	}
	public void printRecord() {
		System.out.println("Name :"+name);
		System.out.println("age :"+age);
	}
	
}
class Studentdemo{
	public static void main(String[] args) {
		Person p = new Person();
		p.setName("akash");
		p.setAge(21);
		p.printRecord();
	}
}



38.	Create a class Employee with three data members (empNo, salary and totalSalary) and following features.
a.	Only parameterized constructor. [Do not overload the constructor]
b.	totalSalary always represents salary total of all the employees created.
c.	empNo should be auto incremented.
d.	display total employees and totalSalary using a method.
Create another class EmployeeDemo (main class) that creates some Employee objects and calls 
Employee method to display no. of employees and total of their salaries.

import java.util.*;
class Employee{
   private static int count;
   private double salary;
   private static double Totsalary;
    private  int empNo;
   Employee(double salary){
	  this.count++;
      this.empNo=count;
	  this.salary=salary;
   }
   public static void countEmployee(){
	      
          System.out.println("total no. of employee= "+count);
   } 
   
   public static void totalSalary(Employee arr[]){
       for(int i=0;i<arr.length;i++){
	       Totsalary=Totsalary+arr[i].salary;
	   }
	   System.out.println("total="+Totsalary);
	   System.out.println(arr[2].empNo);
   }
   
}

class Studentdemo{
    public static void main(String[] args){
    Employee arr[]=new Employee[3];
	
    for (int i=0; i<3;i++) {
    System.out.println("Enter Salary : ");	
    Scanner sc = new Scanner(System.in);
    int salary = sc.nextInt();
    Employee e=new Employee(salary);
    arr[i]=e;
    }
	Employee.countEmployee();
	Employee.totalSalary(arr);
	}
}






39.	Create class Product with three data members (pid, price, quantity) and parameterized constructor that takes values for all three data members.  
Create a main method in different class (say ProductDemo) and perform following task:
a. Accept information for five Product objects from user and store objects in an array
b. Find pid of product with highest price. 
c. Create a static method (with array of product’s object as argument) in Product class to calculate and return total amount spent on all products. 
( amount spent on single product = price of product * quantity of product )

import java.util.*;
class product{
   private static int pid=1;
   private static int count;
   private double price;
   private double quantity;
   private static double totalprice;
    
   product ( double price, double quantity){
	   
      this.price=price;
	  this.quantity=quantity;
   }
   public static void productdetail(product arr[]) {
	   for(int i=0;i<5;i++) {
		   System.out.println("product id :"+product.pid++);
		   System.out.println("product price :"+arr[i].price);
		   System.out.println("product quantity :"+arr[i].quantity);
	   }
   }
   public static void totprice(product arr[]) {
	   for(int i=0;i<5;i++) {
	    totalprice = totalprice + arr[i].price*arr[i].quantity;
	   }
	   System.out.println("total price :"+totalprice);
	   }
   public static void maxprice(product arr[]) {
	   double max = arr[0].price;
	   for(int i=0;i<5;i++) {
	   if(arr[i].price > max)
		   max = arr[i].price;
	   }
	   System.out.println("max price :"+max);
   }
   
   
}

class Studentdemo{
    public static void main(String[] args){
    product arr[] = new product [5];
    arr[0]=new product(10,1);
    arr[1]=new product(20,2);
    arr[2]=new product(30,3);
    arr[3]=new product(40,4);
    arr[4]=new product(50,5);
    
    
    
    /*Scanner sc = new Scanner(System.in);
    for (int i = 0;i<5;i++) {
    System.out.println("enter price");
    int price = sc.nextInt();
    System.out.println("enter quantity");
    double quantity = sc.nextDouble();
    
    
    product p = new product(price,quantity);
    arr[i]=p;
    }*/
    product.productdetail(arr);
    product.totprice(arr);
    product.maxprice(arr);
}
}







40.	Create a class Student having data members name, roll no., age and score. Write a program to 
accept 10 records of student and store them in an array. And then arrange the student records based on the score 
group [0-50], [50-65], [65-80], [80-100].

import java.util.*;

public class StudentRec {
    String name;
    int rollno;
    int age;
    int score;

    StudentRec(String name, int rollno, int age, int score) {
        this.name = name;
        this.rollno = rollno;
        this.age = age;
        this.score = score;
    }

    static void GroupStu(StudentRec arr[]) {
        for (int i = 0; i < arr.length; i++) {
            
           if (arr[i].score <= 50) {
                System.out.println(
                        "Score Group of student = D" + " " + "name=" + arr[i].name + " rollno=" + arr[i].rollno);
            } 

              else if (arr[i].score > 50 && arr[i].score <= 65) {
              System.out.println(
                        "Score Group of student = C" + " " + "name=" + arr[i].name + " rollno=" + arr[i].rollno);
            } 


               else if (arr[i].score > 65 && arr[i].score <= 80) {
               System.out.println(
                        "Score Group of student = B" + " " + "name=" + arr[i].name + " rollno=" + arr[i].rollno);
            } 


               else if (arr[i].score > 80 && arr[i].score <= 100) {
               System.out.println(
                        "Score Group of student = A" + " " + "name=" + arr[i].name + " rollno=" + arr[i].rollno);
            }
        }
    }

}

class StudentRecDemo {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        StudentRec arr[] = new StudentRec[2];

        for (int i = 0; i < arr.length; i++) {
            System.out.println("Enter name");
            
            String name = sc.next();
            System.out.println("Enter rollno");
            int rollno = sc.nextInt();
            System.out.println("Enter age");
            int age = sc.nextInt();
            System.out.println("Enter score");
            int score = sc.nextInt();
            StudentRec sr = new StudentRec(name, rollno, age, score);
            arr[i] = sr;
        }
        sc.close();
        StudentRec.GroupStu(arr);
}
}



41.	Write a program to demonstrate this() construct functionality.
class Employee{
     private int empId;
	 private String empName;
	 Employee(){
	     this(100,"mehul");
	 }
	 
	 Employee(int empId,String empName){
	     this.empId=empId;
		 this.empName=empName;
	 }
	 
	 public void show(){
	    System.out.println("empId="+empId+" "+"empName="+empName);
	 }
  
}

class EmployeeDemo1{
    public static void main(String[] args){
	     Employee e=new Employee();
		 e.show();
	}
}


42.	Create a class Tile to store the edge length of a square tile, and create another class Floor to store length and width of a rectangular floor.
 Add method totalTiles(Tile t) in Floor class with Tile as argument to calculate the whole number of tiles needed to cover the floor completely.




43.	Create a class OneBHK with instance variables roomArea, hallArea and price. Then create default constructor that initializes instance variables with 
some values and a parameterized constructor that takes values for all instance variables and stores them in instance variables. Now create a method named show()  
to print OneBHK’s instance variable values.

Create another class TwoBHK which has (inherites) all the properties and behaviors of OneBHK and a new instance variable room2Area. Then create default constructor 
to initialize all 4 instance variables and a parameterized constructor to take the values for initialization of all instance variables. Override show() method to 
print all data member information.

Write main method in another class (Say Demo) and store three TwoBHK flat’s information and print information using show method. Also print total amount of all flats. 

class onebhk{
   private float roomArea ;
   private float hallarea;
   private float price;
  onebhk(){
	  
	  roomArea=0;
	  hallarea=0;
	  price=0;
  }
    
   onebhk ( float roomArea, float hallarea,float price){
	   
      this.roomArea=roomArea;
	  this.hallarea=hallarea;
	  this.price=price;
   }
   public void show() {
	  
		   System.out.println("roomArea : "+roomArea);
		   System.out.println("hallarea : "+hallarea);
		   System.out.println("price : "+price);
  }
   
}
class twobhk extends onebhk
{
	   private float room2Area ;
	   
	  twobhk(){
		  
		  room2Area=0;
		
	  }
	    
	   twobhk (  float roomArea, float hallarea,float price,float room2Area){
		   super( roomArea,  hallarea, price);
	      this.room2Area=room2Area;
		 
	   }
	   public void show() {
		       super.show();
			   System.out.println("room2Area : "+room2Area);
			   
	  }
	   
	}

class Studentdemo{
    public static void main(String[] args){
    twobhk p = new twobhk (25,15,25000,24); 
    p.show();
}
}





44.	Create three classes
-	Faculty with two data members facultyId and salary and two methods, one intput() method for accepting facultyId as input and another printSalary() to 
print salary.
-	FullTimeFaculty that inherits class Faculty with two data members’ basicSalary and allowance. Override input() method in this class that calls super 
class inut() method and accepts basicSalary and allowance as input. Salary should not be accepted as input but should be calculated using formula (basicSalary + 
allowance)
-	PartTimeFaculty that inherits class Faculty with two data members’ workingHours, ratePerHour. Override input() method in this class that calls super 
class inut() method and accepts workingHours and ratePerHour as input. Salary should not be accepted as input but should be calculated using formula 
( workingHour * ratePerHour )






45.	Create a class Student with two members : rollno and percentage. Create default and parameterized constructors. 
Create method show() to display information. Create another class CollegeStudent inherits Student class. Add a new member semester to it.
Create default and parameterized constructors. Also override show() method that calls super class show() method and displays semester. 

Create another class SchoolStudent inherits Student class. Add a new member className(eg 12th ,10th etc.) to it. 
Create default and parameterized constructors. Also override show() method that calls super class show() method and displays className. 

Create a class( say Demo) with main method that carries out the operation of the project : -- has array to store objects of any class(Student,  
CollegeStudent or SchoolStudent) --create two CollegeStudent  and three SchoolStudent objects and store them inside the array -- 

display all records from the array -- search record on the basic of rollno and check given rollno is of SchoolStudent or of CollegeStudent. --count 
how many students are having A grade, if for A grade percentage >75. 







46.	Create a program to demonstrate the use of instanceof operator or secure reference down casting.



47.	Create a program to demonstrate constructor chaining.
class Employee
{   
    public String empName;
    public int empSalary;
    public String address;

    //default constructor of the class
    public Employee()
    {
    	//this will call the constructor with String param
        this("Chaitanya");
    }

    public Employee(String name)
    {
    	//call the constructor with (String, int) param
    	this(name, 120035);
    }
    public Employee(String name, int sal)
    {
    	//call the constructor with (String, int, String) param
    	this(name, sal, "Mumbai");
    }
    public Employee(String name, int sal, String addr)
    {
    	this.empName=name;
    	this.empSalary=sal;
    	this.address=addr;
    }

    void disp() {
    	System.out.println("Employee Name: "+empName);
    	System.out.println("Employee Salary: "+empSalary);
    	System.out.println("Employee Address: "+address);
    }
  
}
class EmployeeDemo{
	  public static void main(String[] args){
        Employee obj = new Employee();
        obj.disp();
    }

}




48.	Create an Abstract class Processor with int member variable data  and method showData to display data value. 
Create abstract method process() to define processing of member data. Create a class  Factorial using abstract class Processor  to 
calculate and print factorial of a number by overriding the process method. b. Create a class Circle using abstract class Processor to 
calculate and print area of a circle by overriding the process method.Ask user to enter choice (factorial or circle area).  
Also ask data to work upon. Use Processor class reference to achieve this mechanism.
import java.util.Scanner;



abstract class processor{
	float data;
	public void show() {};
	 public abstract void process();
}


class factorial extends processor
{
	public void process() {
		 int result=1;
		   Scanner sc=new Scanner(System.in);
	       System.out.println("enter the number");
		    int n=sc.nextInt();
	      for(int i=1;i<=n;i++)
		    {
			  result=result*i;
			}
		  data=result;
		  System.out.println("Factorial of given number is : "+data);
			sc.close();
	}
	
	
	}
	

class circle extends processor
{
	int radius;
	public void process() {
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter radius : ");
		radius = sc.nextInt();
		double area = 3.14*radius*radius;
		data = (int)area;
		System.out.println("Area of a circle : "+data);
		
		sc.close();
	}
	
}
public class Studentdemo{
	public static void main(String[] args){
	int ch;
	System.out.println("enter the choice 1.factorial 2.Area 3.exit");
	Scanner sc = new Scanner(System.in);
	processor p =null;
    do{
	  
	   ch=sc.nextInt();
	   switch(ch){
	        case 1:
	        	 p=new factorial();
				   p.process();
				   
		    case 2 :
		         p=new circle();
				   p.process();
				
		    case 3 :
			        break;
	   }
	}while(ch!=3);
   
}
}




49.	Create Interface Taxable with members salesTax=7% and incomeTax=10.5%. create abstract method calcTax(). 
a. Create class Employee(empId,name,salary) and implement Taxable to calculate incomeTax on yearly salary. 
b. Create class Product(pid,price,quantity) and implement Taxable to calculate salesTax on unit price of product. 
c. Create class for main method(Say XYZ), accept employee information and a product information from user and print income tax and sales tax respectively.
import java.util.Scanner;
abstract class taxable{
	public final static double salesTax=0.07;
	  public final static double incomeTax=0.105;
	  public abstract void calcTax();
	  public abstract void acceptRecord();
	  public abstract void printRecord();
}
class employee extends taxable
{
	int empid;
	String name;
	float salary;
	public employee() {
		this.empid=0;
		this.name=" ";
		this.salary=0;
	}
	public void acceptRecord(){
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter empid : ");
		 empid = sc.nextInt();
		System.out.println("Enter  : name");
		name = sc.nextLine();
		System.out.println("Enter salary : ");
		salary = sc.nextInt();
		sc.close();
	}
	public void calcTax() {
		double tax=salary*incomeTax;
		  System.out.println("tax="+tax);
	}
	public void printRecord() {
		System.out.println(" empid: "+empid);
		System.out.println(" name: "+name);
		System.out.println(" salary: "+salary);
	}
}

class product extends taxable
{
	int pid;
	float price;
	int quantity;
	public product() {
		this.pid=0;
		this.price=0;
		this.quantity=0;
	}
	public void acceptRecord(){
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter  pid: ");
		pid = sc.nextInt();
		System.out.println("Enter  : price");
		price = sc.nextFloat();
		System.out.println("Enter quantity : ");
		quantity = sc.nextInt();
		sc.close();
	}
	
	public void printRecord() {
		System.out.println(" pid: "+pid);
		System.out.println(" price: "+price);
		System.out.println(" quantity: "+quantity);
	}
	public void calcTax(){
	      double tax=price*quantity*salesTax;
		  System.out.println("tax="+tax);
	  }
}

class menu{
static Scanner sc = new Scanner(System.in);
public static int menuList() {
    System.out.println("0.Exit");
    System.out.println("1.employee");
    System.out.println("2.product");
    System.out.print("Enter choice  :   ");
    return sc.nextInt();
}
}

class Studentdemo{
    public static void main(String[] args) {
    int choice;
    while((choice = menu.menuList( ) ) != 0 )
    {
    	taxable taxable = null;
        switch( choice )
        {
        case 1:
        	taxable = new employee();   
            break;
        case 2:
        	taxable =  new product(); 
            break;
        }
        if( taxable != null )
        {
        	taxable.acceptRecord();
        	taxable.printRecord();
        	taxable.calcTax();
        }
    }
   }
}



50.Explain the importance of toString() and equals() method of the Object class and override them on class Employee(empId,name,salary). 
 a. Create class for main method(say XYZ),and accept five employees information and store in an array. Also ensure if entered empId already 
exist or not (use equals method).  b. Display all employee info using toString method.





51.Create a program that helps banks to maintain records. It should have following facilities. 
o Anybody can create current or saving account with following initial information: account number, 
name, balance, and branch. o display account detail for a particular accounts. o display total money deposited in bank. o 
allow deposit and  withdrawal in an account  . o for saving account opening balance and minimum balance must be 5000. 
o for current account opening balance and minimum balance must be 1000. o can not withdraw the amount from the 
account that makes balance less than the minimum balance. 





52.	Input name of a person and count how many vowels it contains.  Use String class functions. 

public class Count {

    public static void main(String[] args) {
        String line = "This website is aw3som3.";
        int vowels = 0, consonants = 0, digits = 0, spaces = 0;

        line = line.toLowerCase();
        for(int i = 0; i < line.length(); ++i)
        {
            char ch = line.charAt(i);
            if(ch == 'a' || ch == 'e' || ch == 'i'
                || ch == 'o' || ch == 'u') {
                ++vowels;
            }
            else if((ch >= 'a'&& ch <= 'z')) {
                ++consonants;
            }
            else if( ch >= '0' && ch <= '9')
            {
                ++digits;
            }
            else if (ch ==' ')
            {
                ++spaces;
            }
        }

        System.out.println("Vowels: " + vowels);
        System.out.println("Consonants: " + consonants);
        System.out.println("Digits: " + digits);
        System.out.println("White spaces: " + spaces);
    }
}




53.	Input data exactly in the following format, and print sum of all integer values. “67, 89, 23, 67, 12, 55, 66”.   
(Hint use String class split method and Integer class parseInt method) .








54.	Write a program to reverse the given String.
import java.util.*;
class ReverseString
{
  public static void main(String args[])
  {
    String original, reverse = "";
    Scanner in = new Scanner(System.in);

    System.out.println("Enter a string to reverse");
    original = in.nextLine();

    int length = original.length();

    for (int i = length - 1 ; i >= 0 ; i--)
      reverse = reverse + original.charAt(i);

    System.out.println("Reverse of the string: " + reverse);
  }
}

55.	Write a program to count no of words in the String.

public class WordCount {  
      static int wordcount(String string)  
        {  
          int count=0;  
      
            char ch[]= new char[string.length()];     
            for(int i=0;i<string.length();i++)  
            {  
                ch[i]= string.charAt(i);  
                if( ((i>0)&&(ch[i]!=' ')&&(ch[i-1]==' ')) || ((ch[0]!=' ')&&(i==0)) )  
                    count++;  
            }  
            return count;  
        }  
      public static void main(String[] args) {  
          String string ="    India Is My Country";  
         System.out.println(wordcount(string) + " words.");   
    }  
}  

56.	Write a program to convert very first character of every word in uppercase in a String.
import java.util.*;
 public class Exercise58 {
     public static void main(String[] args){
	 Scanner in = new Scanner(System.in);
     System.out.print("Input a Sentence: ");
	 String line = in.nextLine();
	 String upper_case_line = ""; 
       Scanner lineScan = new Scanner(line); 
         while(lineScan.hasNext()) {
             String word = lineScan.next(); 
             upper_case_line += Character.toUpperCase(word.charAt(0)) + word.substring(1) + " "; 
         }
      System.out.println(upper_case_line.trim()); 
    }
}



57.	Write a program to reverse every word of the String.
public class StringFormatter {  
public static String reverseWord(String str){  
    String words[]=str.split("\\s");  
    String reverseWord="";  
    for(String w:words){  
        StringBuilder sb=new StringBuilder(w);  
        sb.reverse();  
        reverseWord+=sb.toString()+" ";  
    }  
    return reverseWord.trim();  
}  
} 



58.	Store name of weekdays in an array (starting from “Sunday” at 0 index). 
Ask day position from user and print day name. Handle array index out of bound exception and 
give proper message if user enter day index outside range (0-6). 







59.Create a class Voter(voterId, name, age) with parameterized constructor.  
The parameterized constructor should throw a checked exception if age is less than 18. 
The message of exception is “invalid age for voter ” 







60.Create Interface StudentFee and declare following method.  getFee() throws InvalidFeeException. 
This method ask fees from user and throws exception if user enters invalid or negative fees 
Create class Student with members (name, fees) and implement the StudentFee Interface.











61.Create a Thread class to print following star (*) pattern on screen with delay of 1 second between each * print. 
Number of lines in the pattern should be passed to the constructor of Thread class.  
*  * * * *  * * * * * * * * * * Use this class in main method and ask user to enter number of lines to print.
















62.	Create a class that checks whether a given number is prime or not using  Runnable interface.

import java.io.*;
class Perfect implements Runnable
{
    public void run()
    {
        int no;
        for(no=1;no<=1000;no++)
        {
            int sum=0;
            for(int i=1;i<=no/2;i++)
            {
                if(no%i==0)
                    sum=sum+i;
            }
            if(no==sum)
                System.out.println(no+" Number is perfect");
        }
    }
}

class Prime implements Runnable
{
    public void run()
    {
        int no;
        for(no=2;no<=1000;no++)
        {
            int cnt=0;
            for(int i=2;i<=no/2;i++)
                if(no%i==0)
                {
                    cnt++;
                    break;
                }
            if(cnt==0)
                System.out.println(no+" Number is prime");
        }
    }
}


class PerfectPrime
{
    public static void main(String args[])
    {
        try
        {
            Perfect p=new Perfect();
            Thread t1=new Thread(p);
            Prime p1=new Prime();
            Thread t2=new Thread(p1);
            t1.start();
            t2.start();
        }
        catch(Exception e1){}
    }
}
63.	Write a program to count how many times character ‘t’ occurs in a file. 
class JavaExample {  

   static void countEachChar(String str) 
   { 
	//ASCII values ranges upto 256
	int counter[] = new int[256]; 

	//String length
	int len = str.length(); 

	/* This array holds the occurrence of each char, For example
	 * ASCII value of A is 65 so if A is found twice then 
	 * counter[65] would have the value 2, here 65 is the ASCII value
	 * of A
	 */
	for (int i = 0; i < len; i++) 
		counter[str.charAt(i)]++; 

	// We are creating another array with the size of String
	char array[] = new char[str.length()]; 
        for (int i = 0; i < len; i++) { 
	   array[i] = str.charAt(i); 
	   int flag = 0; 
	   for (int j = 0; j <= i; j++) { 

		/* If a char is found in String then set the flag 
		 * so that we can print the occurrence
		 */
		if (str.charAt(i) == array[j])  
			flag++;                 
	   } 

	   if (flag == 1)  
	      System.out.println("Occurrence of char " + str.charAt(i)
		 + " in the String is:" + counter[str.charAt(i)]);             
	} 
   } 
   public static void main(String[] args) 
   {  
	String str = "beginnersbook"; 
	countEachChar(str); 
   } 
}


64.	Write a program to count no of words in a text file and average word size.
import java.io.BufferedReader;  
import java.io.FileReader;  
   
public class CountWordFile   
{  
    public static void main(String[] args) throws Exception {  
        String line;  
        int count = 0;  
          
        //Opens a file in read mode  
        FileReader file = new FileReader("data.txt");  
        BufferedReader br = new BufferedReader(file);  
              
        //Gets each line till end of file is reached  
        while((line = br.readLine()) != null) {  
            //Splits each line into words  
            String words[] = line.split(" ");  
            //Counts each word  
            count = count + words.length;  
        }  
          
        System.out.println("Number of words present in given file: " + count);  
        br.close();  
    }  
}  

65.	Write a program to count number of bytes in a image file(jpeg/png/gif).  
Also find how much time it will take to upload the file on server if internet speed is 256 bps(bits per second).



















66.	Write a program to store your shopping details in a binary file(shopping.dat) with information itemName, price, quantity. 
(Use ObjectOutputStream to store Item class object ).






















67.	Write a program to read data from shopping.dat file creted in above problem and find total money spent on all shopping items. . 
(Use ObjectInputStream to read Item class object).
